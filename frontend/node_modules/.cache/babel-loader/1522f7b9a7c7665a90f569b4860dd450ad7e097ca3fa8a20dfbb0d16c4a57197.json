{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\firststage2copy\\\\SALTY\\\\frontend\\\\src\\\\containers\\\\MyIssues.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport IssueCard from '../components/IssueCard';\nimport DisplayIssueFilters from './DisplayIssueFilters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyIssues({\n  user\n}) {\n  _s();\n  const [selectedProject, setSelectedProject] = useState('');\n  const [projects, setProjects] = useState([]);\n  const [data, setData] = useState([]);\n  const [selectedFilter, setSelectedFilter] = useState('assigned_to_me');\n  const [selectedIssue, setSelectedIssue] = useState(null);\n  useEffect(() => {\n    if (user && user.email) {\n      const fetchProjects = async () => {\n        try {\n          const response = await axios.get(`http://localhost:8000/djapp/project_list/?email=${user.email}`);\n          setProjects(response.data || []);\n        } catch (error) {\n          console.error('Error fetching projects:', error);\n        }\n      };\n      fetchProjects();\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user && user.email) {\n      const fetchData = async () => {\n        try {\n          const response = await axios.get(`http://localhost:8000/djapp/filters_function/`, {\n            params: {\n              filter: selectedFilter,\n              status: '',\n              projectid: selectedProject,\n              currentUser: user.email\n            }\n          });\n          console.log(response.data);\n          setData(response.data);\n        } catch (error) {\n          console.error(\"There was an error fetching the data!\", error);\n        }\n      };\n      fetchData();\n    }\n  }, [selectedFilter, selectedProject, user]);\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  const setProjectFunction = e => {\n    const projectId = e.target.value;\n    setSelectedProject(projectId);\n    setSelectedFilter(projectId !== 'allprojects' ? 'assigned_to_me' : 'allprojects');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All your issues\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"dropdown\",\n        value: selectedProject,\n        onChange: setProjectFunction,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"allprojects\",\n          children: \"All Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: project.projectid,\n          children: project.projectname\n        }, project.projectid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"issue-cards-container\",\n        children: Array.isArray(data) && data.length > 0 ? data.map(item => /*#__PURE__*/_jsxDEV(IssueCard, {\n          issue: item,\n          onClick: () => setSelectedIssue(item)\n        }, item.issue_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No issues found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-display-container\",\n        children: selectedIssue ? /*#__PURE__*/_jsxDEV(DisplayIssueFilters, {\n          data: selectedIssue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nothing-displayed\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Select an Issue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(MyIssues, \"HOVoRuo00E6DhG3oLW4aSo3w7W4=\");\n_c = MyIssues;\nconst mapStateToProps = state => ({\n  user: state.auth.user // Assuming the user information is stored in the 'auth' slice of the Redux state\n});\nexport default connect(mapStateToProps)(MyIssues);\nvar _c;\n$RefreshReg$(_c, \"MyIssues\");","map":{"version":3,"names":["React","useEffect","useState","connect","axios","IssueCard","DisplayIssueFilters","jsxDEV","_jsxDEV","MyIssues","user","_s","selectedProject","setSelectedProject","projects","setProjects","data","setData","selectedFilter","setSelectedFilter","selectedIssue","setSelectedIssue","email","fetchProjects","response","get","error","console","fetchData","params","filter","status","projectid","currentUser","log","children","fileName","_jsxFileName","lineNumber","columnNumber","setProjectFunction","e","projectId","target","value","className","onChange","map","project","projectname","Array","isArray","length","item","issue","onClick","issue_id","_c","mapStateToProps","state","auth","$RefreshReg$"],"sources":["C:/Users/Hp/Documents/firststage2copy/SALTY/frontend/src/containers/MyIssues.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport IssueCard from '../components/IssueCard';\r\nimport DisplayIssueFilters from './DisplayIssueFilters';\r\n\r\nfunction MyIssues({ user }) {\r\n  const [selectedProject, setSelectedProject] = useState('');\r\n  const [projects, setProjects] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [selectedFilter, setSelectedFilter] = useState('assigned_to_me');\r\n  const [selectedIssue, setSelectedIssue] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (user && user.email) {\r\n      const fetchProjects = async () => {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8000/djapp/project_list/?email=${user.email}`);\r\n          setProjects(response.data || []);\r\n        } catch (error) {\r\n          console.error('Error fetching projects:', error);\r\n        }\r\n      };\r\n\r\n      fetchProjects();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.email) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8000/djapp/filters_function/`, {\r\n            params: {\r\n              filter: selectedFilter,\r\n              status: '',\r\n              projectid: selectedProject,\r\n              currentUser: user.email\r\n            }\r\n          });\r\n          console.log(response.data);\r\n          setData(response.data);\r\n        } catch (error) {\r\n          console.error(\"There was an error fetching the data!\", error);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [selectedFilter, selectedProject, user]);\r\n\r\n  if (!user) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const setProjectFunction = (e) => {\r\n    const projectId = e.target.value;\r\n    setSelectedProject(projectId);\r\n    setSelectedFilter(projectId !== 'allprojects' ? 'assigned_to_me' : 'allprojects');\r\n  };\r\n\r\n  return (\r\n    <div className='body'>\r\n      <div>\r\n        <h3>All your issues</h3>\r\n        <select className='dropdown' value={selectedProject} onChange={setProjectFunction}>\r\n          <option value=\"\">Choose project</option>\r\n          <option value=\"allprojects\">All Projects</option>\r\n          {projects.map((project) => (\r\n            <option key={project.projectid} value={project.projectid}>\r\n              {project.projectname}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className='display-container'>\r\n        <div className=\"issue-cards-container\">\r\n          {Array.isArray(data) && data.length > 0 ? (\r\n            data.map(item => (\r\n              <IssueCard key={item.issue_id} issue={item} onClick={() => setSelectedIssue(item)} />\r\n            ))\r\n          ) : (\r\n            <h4>No issues found</h4>\r\n          )}\r\n        </div>\r\n        <div className='info-display-container'>\r\n          {selectedIssue ? (\r\n            <DisplayIssueFilters data={selectedIssue} />\r\n          ) : (\r\n            <div className=\"nothing-displayed\">\r\n              <h6>Select an Issue</h6>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user // Assuming the user information is stored in the 'auth' slice of the Redux state\r\n});\r\n\r\nexport default connect(mapStateToProps)(MyIssues);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}