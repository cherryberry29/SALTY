{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\firststage2\\\\Project-Management-Tool\\\\frontend\\\\src\\\\containers\\\\backlog.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './css/sprint.css';\nimport IssueType from './issuseType';\nimport { connect } from 'react-redux'; // Import connect from react-redux\nimport { addIssue } from '../actions/auth';\nimport IssueStatus from './issueStatus';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Backlog({\n  addIssue\n}) {\n  _s();\n  const [inputValues, setInputValues] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [InputField, setInputField] = useState(false);\n  const [buttonShow, setButtonShow] = useState(true);\n  const [draggedEle, setDragged] = useState([]);\n  const showInputField = () => {\n    setInputField(!showDropdown);\n    setButtonShow(false);\n  };\n  const handleKeyPress = async event => {\n    if (event.key === 'Enter') {\n      setInputField(false);\n      setButtonShow(true);\n      setInputValues([...inputValues, event.target.value]);\n      try {\n        await addIssue({\n          issueName: event.target.value\n        });\n      } catch (error) {\n        console.error('Error creating project:', error);\n      }\n      event.target.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputValues.length ? 'solid-box' : 'dotted-box',\n      children: inputValues.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value\",\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: /*#__PURE__*/_jsxDEV(IssueStatus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assignee.png\",\n          alt: \"assignee\",\n          id: \"userIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-issue\",\n      children: [buttonShow && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showInputField,\n        children: \"Create Issue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 24\n      }, this), InputField && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"issueCreation\",\n        children: [/*#__PURE__*/_jsxDEV(IssueType, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"type your issue here\",\n          onKeyDown: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Backlog, \"FmtPbvvwYWZQK7X+m44UYQDTI5U=\");\n_c = Backlog;\nconst mapStateToProps = state => ({\n  // Map any state needed to props here\n});\nexport default connect(mapStateToProps, {\n  addIssue\n})(Backlog); // Connect the component to the Redux store and add the addIssue action\nvar _c;\n$RefreshReg$(_c, \"Backlog\");","map":{"version":3,"names":["React","useState","IssueType","connect","addIssue","IssueStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","Backlog","_s","inputValues","setInputValues","showDropdown","setShowDropdown","InputField","setInputField","buttonShow","setButtonShow","draggedEle","setDragged","showInputField","handleKeyPress","event","key","target","value","issueName","error","console","children","className","length","map","index","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","id","onClick","type","placeholder","onKeyDown","_c","mapStateToProps","state","$RefreshReg$"],"sources":["C:/Users/Hp/Documents/firststage2/Project-Management-Tool/frontend/src/containers/backlog.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './css/sprint.css';\r\nimport IssueType from './issuseType';\r\nimport { connect } from 'react-redux'; // Import connect from react-redux\r\nimport { addIssue } from '../actions/auth';\r\nimport IssueStatus from './issueStatus';\r\n\r\nfunction Backlog({ addIssue }) {\r\n  const [inputValues, setInputValues] = useState([]);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [InputField, setInputField] = useState(false);\r\n  const [buttonShow, setButtonShow] = useState(true);\r\n  const [draggedEle, setDragged] = useState([]);\r\n\r\n  const showInputField = () => {\r\n    setInputField(!showDropdown);\r\n    setButtonShow(false);\r\n  };\r\n\r\n  const handleKeyPress = async (event) => {\r\n    if (event.key === 'Enter') {\r\n      setInputField(false);\r\n      setButtonShow(true);\r\n      setInputValues([...inputValues, event.target.value]);\r\n      \r\n      try {\r\n        await addIssue({ issueName: event.target.value });\r\n      } catch (error) {\r\n        console.error('Error creating project:', error);\r\n      }\r\n      event.target.value = '';\r\n    }\r\n};\r\n\r\n  return (\r\n    <>\r\n      <div className={inputValues.length ? 'solid-box' : 'dotted-box'}>\r\n        {inputValues.map((value, index) => (\r\n          <div key={index} className=\"input-item\" >\r\n            <div className='value'>{value}</div>\r\n            <div className=\"right\">\r\n              <IssueStatus />\r\n            </div>\r\n            <img src=\"/assignee.png\" alt=\"assignee\" id=\"userIcon\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"create-issue\">\r\n        {buttonShow && <button onClick={showInputField}>Create Issue</button>}\r\n        {InputField && (\r\n          <div className=\"issueCreation\">\r\n            <IssueType />\r\n            <input type=\"text\" placeholder=\"type your issue here\" onKeyDown={handleKeyPress} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // Map any state needed to props here\r\n});\r\n\r\nexport default connect(mapStateToProps, { addIssue })(Backlog); // Connect the component to the Redux store and add the addIssue action\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}